diff -ru orig/bzlib-conduit.cabal new/bzlib-conduit.cabal
--- orig/bzlib-conduit.cabal	2014-04-02 12:25:07.231917434 +0300
+++ new/bzlib-conduit.cabal	2014-04-02 12:25:06.000000000 +0300
@@ -26,7 +26,8 @@
   build-depends:       base == 4.*
                      , bytestring >=0.9 && <0.11
                      , mtl == 2.*
-                     , conduit >= 0.5 && < 1.1
+                     , conduit >= 0.5 && < 1.2
+                     , conduit-extra >= 1.0 && < 1.2
                      , resourcet
                      , data-default
                      , bindings-DSL
@@ -54,7 +55,9 @@
                      , QuickCheck
                      , random
                      , conduit
+                     , conduit-extra
                      , bzlib-conduit
+                     , resourcet
 
 benchmark bench
   type:                exitcode-stdio-1.0
@@ -62,4 +65,5 @@
   main-is:             bench.hs
   build-depends:       base == 4.*
                      , conduit
+                     , conduit-extra
                      , bzlib-conduit
diff -ru orig/test/test.hs new/test/test.hs
--- orig/test/test.hs	2014-04-02 12:25:07.227917434 +0300
+++ new/test/test.hs	2014-04-02 12:25:06.000000000 +0300
@@ -1,6 +1,7 @@
 {-# LANGUAGE ViewPatterns #-}
 import Control.Applicative
 import Control.Monad
+import Control.Monad.Trans.Resource (runResourceT)
 import qualified Data.ByteString.Char8 as S
 import qualified Data.ByteString.Lazy.Char8 as L
 import Data.Conduit
@@ -36,4 +37,4 @@
               <$> replicateM (abs n) randomIO
         dest <- runResourceT $ do
           C.sourceList (P.map S.pack ss) =$= bzip2 =$= bunzip2 $$ B.take (10^9)
-        return $ dest == L.pack (concat ss)
+        return $ dest == L.pack (P.concat ss)
